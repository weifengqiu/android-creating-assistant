//管理类，创建时用该类中的newInstance方法即可
public class LeavingMassegeDB {
	public static final String DB_NAME = "LMassegeLibrary";
    public static final int VERSION = 1;
    public SQLiteDatabase db;
    public static LeavingMassegeDB leavingMassegeDB;
    
    
    private LeavingMassegeDB(Context context){
        LMassegeDatabaseHelper dbHelper=new LMassegeDatabaseHelper(context,
                DB_NAME, null, VERSION);
        db=dbHelper.getWritableDatabase();
    }
    
    public synchronized static LeavingMassegeDB newInstance(Context context){
    	if(leavingMassegeDB==null){
    		leavingMassegeDB = new LeavingMassegeDB(context);
    		
    	}
    	return leavingMassegeDB;
    }
    
    public void saveLMassege(String time,byte[] massege){
    	if(time!=null&&massege!=null){
    		ContentValues values=new ContentValues();
    		values.put("time", time);
    		values.put("massege", massege);
    		db.insert("LMassege", null, values);
    	}else {
			AceDubug.dubug_info_d("留言保存不成功");
		}
    }
    
    public void coverMassege(String nowTime,byte[] massege,String preTime){
    	ContentValues values = new ContentValues();
    	values.put("time", nowTime);
    	values.put("massege", massege);
    	db.update("LMassege",values, "time = ?", new String[]{preTime});
    	AceDubug.dubug_info_d("覆盖成功");
    }
   
    public void deleteLMassege(String time){
    	db.delete("LMassege", "time = ?", new String[]{time});
    }
    
    public byte[] getMassege(String time){
    	Cursor cursor = db.query("LMassege",null,"time = ?",new String[]{time},null,null,null);
    	if(cursor.moveToFirst()){
    		return cursor.getBlob(cursor.getColumnIndex("massege"));
    	}
    	return null;
    }
    
    //获取所有的留言
    public ArrayList<String> getAllMassege(){
    	ArrayList<String> list =new ArrayList<String>();
    	Cursor cursor = db.query("LMassege",null,null,null,null,null,null);
    	if(cursor.moveToFirst()){
    		do{
    			list.add(cursor.getString(cursor.getColumnIndex("time")));
    		}while(cursor.moveToNext());
    		return list;
    	}
    	return null;//注意这里，用于看是否有返回数据
    }
    
    //获取表中的行数
    public int getMassegeCount(){
    	int count = 0;
    	Cursor cursor = db.query("LMassege",null,null,null,null,null,null);
    	count = cursor.getCount();
    	return count;
    }
    
    public String getZeroTime(){
    	Cursor cursor = db.query("LMassege",null,null,null,null,null,null);
    	if(cursor.moveToFirst()){
    		return cursor.getString(cursor.getColumnIndex("time"));
    	}
    	return null;
    }
 }
 
 /*
  *基础类
  */
 public class LMassegeDatabaseHelper extends SQLiteOpenHelper{ 
	public LMassegeDatabaseHelper(Context context, String name, CursorFactory factory, int version) {
		super(context, name, factory, version);
		
		// TODO Auto-generated constructor stub
	}
	
	public static final String CREATE_LMASSEGE="create table LMassege(" +
            "id integer primary key autoincrement," +
            "time text,"+
            "massege blob)";
	
	 @Override
	    public void onCreate(SQLiteDatabase db) {
	        db.execSQL(CREATE_LMASSEGE);
	    }
	 
	 @Override
	    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

	    }
}
